# JobCatcher 项目 Cursor Rules
# 求职辅助平台 - FastAPI + Vue3 + LangGraph + Claude4

## 项目概述
- **项目名称**: JobCatcher - 低成本云平台求职辅助平台
- **后端**: FastAPI + LangChain/LangGraph + Claude 4 + RAG
- **前端**: Vue 3 + Vite + Pinia + Element Plus
- **部署**: Azure App Service (单容器)
- **目标用户**: ≤ 100 用户，月度请求 < 5k

## 代码规范

### 通用规范
- 所有代码必须有详细的中英文双语注释
- 优先使用免费/无人工审核的SaaS服务
- 遵循单一职责原则，模块化设计
- 使用TypeScript (前端) 和 Python 类型提示 (后端)

### Python 后端规范
- 使用 FastAPI 框架
- 异步编程 (async/await)
- Pydantic 模型验证
- LangGraph 多Agent架构
- 遵循 PEP 8 代码风格
- 使用 SQLAlchemy ORM
- 环境变量管理所有配置

### Vue3 前端规范  
- Composition API 优先
- TypeScript 严格模式
- Pinia 状态管理
- Element Plus UI 组件库
- 单文件组件 (.vue)
- 响应式设计，移动端友好

### 文件命名
- Python: snake_case (例: job_search_agent.py)
- Vue组件: PascalCase (例: ChatBox.vue)
- 接口文件: kebab-case (例: job-api.ts)

### Git 提交规范
- feat: 新功能
- fix: 修复bug
- docs: 文档更新
- style: 代码格式
- refactor: 重构
- test: 测试相关

## 技术栈约束

### 必须使用的依赖
- **后端**: fastapi, langchain, langchain-anthropic, langgraph, uvicorn, httpx, apscheduler, azure-search-documents, azure-storage-blob
- **前端**: vue@3, vite, pinia, element-plus, chart.js, axios

### API集成要求
- Anthropic Claude 4 (LLM核心)
- Azure AI Search (RAG检索)
- Apify StepStone Scraper (职位抓取)
- SerpAPI Google Jobs (职位搜索)
- APILayer Resume Parser (简历解析)
- PDFMonkey (PDF生成)
- Google OAuth 2.0 (用户认证)

### 数据存储
- PostgreSQL (Azure Flexible)
- Azure Blob Storage (文件存储)
- Redis缓存 (可选)

## 架构模式

### 多Agent设计
- JobSearchAgent: 职位搜索与聚合
- ResumeCriticAgent: 简历分析与匹配
- SkillHeatmapAgent: 技能热点分析  
- ResumeRewriteAgent: 简历改写生成

### 前后端分离
- 后端提供 RESTful API + WebSocket
- 前端SPA，打包后作为FastAPI静态文件服务
- 同源部署，简化配置

### 安全要求
- JWT token + HttpOnly Cookie
- CORS配置
- 输入验证与SQL注入防护
- 敏感信息环境变量化

## 性能优化
- 异步处理IO密集操作
- 数据库查询优化
- 前端懒加载
- CDN静态资源 (如需要)
- 合理的缓存策略

## 错误处理
- 统一异常处理机制
- 用户友好的错误提示
- 详细的日志记录
- 优雅降级策略

## 开发工具
- 使用 Context7 查看所有第三方库文档
- Cursor AI辅助开发
- 热重载开发环境
- 单元测试覆盖核心逻辑 